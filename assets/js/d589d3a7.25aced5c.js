"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=p(n),d=a,h=g["".concat(l,".").concat(d)]||g[d]||u[d]||s;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const s={title:"Getting Started",slug:"/getting-started"},o=void 0,i={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Create Nest Application",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/cypress-api-testing-workshop/getting-started",draft:!1,tags:[],version:"current",frontMatter:{title:"Getting Started",slug:"/getting-started"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/cypress-api-testing-workshop/"},next:{title:"Writing Your First Test",permalink:"/cypress-api-testing-workshop/writing-your-first-test"}},l={},p=[{value:"Create Nest Application",id:"create-nest-application",level:2},{value:"Configure Cypress",id:"configure-cypress",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"create-nest-application"},"Create Nest Application"),(0,a.kt)("p",null,"The first thing we will do is install the Nest CLI tool:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -g @nestjs/cli\n")),(0,a.kt)("p",null,"Next, use the CLI to create a new application:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nest new server\n")),(0,a.kt)("p",null,"When prompted, select NPM as your package manager."),(0,a.kt)("p",null,"Go into the newly created ",(0,a.kt)("strong",{parentName:"p"},"server")," directory and install Cypress\nand the plugin:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D cypress cypress-plugin-api\n")),(0,a.kt)("p",null,"Next, open the project in your code editor (we'll be using VS Code in the\ntutorial):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"code .\n")),(0,a.kt)("h2",{id:"configure-cypress"},"Configure Cypress"),(0,a.kt)("p",null,"Before we start working on the API, let's get Cypress up and running and write\nour first test. The test won't pass yet, but that's okay."),(0,a.kt)("p",null,"Launch Cypress:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx cypress open\n")),(0,a.kt)("p",null,"Select End-to-End testing, and go through the next few steps. Cypress will\nconfigure your project by creating all the files necessary for it to run. While\nwe won't be doing end-to-end testing exactly, it's the most appropriate place to\ndo API testing."),(0,a.kt)("p",null,"After the setup is done, update the ",(0,a.kt)("strong",{parentName:"p"},"cypress.config.ts")," file to add the\n",(0,a.kt)("inlineCode",{parentName:"p"},"baseUrl"),' option. We\'ll set it to "http://localhost:3000", which is what our\nNest application will serve the API locally during development.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=cypress.config.ts",title:"cypress.config.ts"},"e2e: {\n  // highlight-next-line\n  baseUrl: 'http://localhost:3000',\n  setupNodeEvents(on, config) {\n    // implement node event listeners here\n  },\n},\n")),(0,a.kt)("p",null,"While we are at it, we will import the ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress-plugin-api")," package into the\n",(0,a.kt)("strong",{parentName:"p"},"cypress/support/e2e.ts")," so it is available to use in our specs. Throw the\nfollowing towards the top of the file with any other imports:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=cypress/support/e2e.ts",title:"cypress/support/e2e.ts"},'import "cypress-plugin-api";\n')),(0,a.kt)("p",null,"If you go back to Cypress, you'll see a warning that it can't verify the\nserver is running. This hints that we still need to start up our\nserver. Let's go ahead and do so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run start:dev\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You will likely need to open several command windows or tabs to\nrun Cypress and Nest simultaneously. In VS Code, I like to run Nest in a\n",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_javascript-debug-terminal"},"JavaScript Debug\nTerminal"),",\nwhich will attach the debugger to the process automatically.")),(0,a.kt)("p",null,'Go back to Cypress, and hit the "try again" button on the section that warned us\nabout the server not running. It should go away, and you can hit "Start E2E\nTesting".'),(0,a.kt)("p",null,'Hit the "Create new empty spec" button, name the spec ',(0,a.kt)("strong",{parentName:"p"},"missions.cy.ts"),", and\nrun it. This will create a default spec that visits a test site, but\nwe'll soon update it to contain all the tests we write for the missions API."))}u.isMDXComponent=!0}}]);