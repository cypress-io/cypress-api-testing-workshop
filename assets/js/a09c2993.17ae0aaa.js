"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[128],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),f=i,g=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(g,a(a({ref:t},u),{},{components:r})):n.createElement(g,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8495:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={title:"Introduction",slug:"/"},a=void 0,s={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Getting Started",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/cypress-api-testing/",draft:!1,tags:[],version:"current",frontMatter:{title:"Introduction",slug:"/"},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/cypress-api-testing/getting-started"}},l={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Pre-requisites",id:"pre-requisites",level:3}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Greetings, friend! This tutorial will cover creating an API using\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://nestjs.com"},"NestJS")," framework. Along the way, we will build out the\napplication using tests with ",(0,i.kt)("a",{parentName:"p",href:"https://cypress.io"},"Cypress")," and the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/filiphric/cypress-plugin-api"},"Cypress API Plugin"),"."),(0,i.kt)("p",null,"If you are unfamiliar with NestJS, it is a Node-based framework heavily\ninfluenced by Angular and is great for building any server-side\napplication. What I like about Nest is that it provides building blocks\n(similar to those found in Angular) for creating applications. This helps those\nfamiliar with Nest and how it works to jump from project to\nproject and know roughly how things already work."),(0,i.kt)("p",null,"Cypress is typically known for end-to-end testing web applications, as well as\ncomponent testing. With the Cypress API Plugin, we can also use Cypress to test our\nbackend applications. The plugin provides a nice interface showing each API call's results. Typically I would reach for something like\nPostman to use when I develop APIs, but with Cypress, I can nearly replace\nPostman and have a nice suite of automated tests to go along with it when I'm\ndone."),(0,i.kt)("p",null,"For this tutorial, we are creating a mission board for a fictional agency called Cypress Heroes. This board will feature a list of our heroes' missions. We'll be able to get, create, update, and delete missions on the\nboard. Yes, it's a to-do list, but it's much cooler because, you know,\nsuperheroes."),(0,i.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("p",null,"To get started, you will need the following tools:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Node 16+ Installed"),(0,i.kt)("li",{parentName:"ul"},"VS Code or similar IDE")))}p.isMDXComponent=!0}}]);